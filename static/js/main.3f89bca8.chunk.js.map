{"version":3,"sources":["components/Button.js","components/header.js","components/Evet.js","components/Task.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","className","style","backgroundColor","defaultProps","header","title","onAdd","Evet","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Task","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","htmlFor","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setshowAddTask","Reminder","settasks","Math","floor","random","newTask","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f89bca8.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\n\r\nconst Button = ({color, text, onClick}) => {\r\n    \r\n    return <button \r\n                onClick={onClick} \r\n                className=\"btn\" \r\n                style ={{backgroundColor: color}}>\r\n                    {text}\r\n            </button>\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'orangered',\r\n}\r\nButton.propTypes = {\r\n    color: PropTypes.string,\r\n    text: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\nconst header = ({title, onAdd}) => {\r\n   \r\n    return (\r\n        <div className=\"header\">\r\n            <h1>{title}</h1>\r\n            <Button color = 'green' text = 'Add' onClick = {onAdd} />\r\n        </div>\r\n    )\r\n}\r\nheader.propTypes={\r\n    title: PropTypes.string.isRequired,\r\n}\r\nexport default header\r\n\r\n","import React from 'react'\r\nimport {FaTimes} from 'react-icons/fa'\r\n\r\nconst Evet = ({task, onDelete, onToggle}) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)}>\r\n            <h3>{task.text} <FaTimes style = {{color:'red', cursor:'pointer'}} onClick={() => onDelete(task.id)}/> \r\n            </h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n \r\nexport default Evet\r\n","import Evet from './Evet'\r\nconst Task = ({tasks, onDelete, onToggle}) => {\r\n    return (\r\n        <>\r\n            {\r\n                tasks.map((task) =>(\r\n                    <Evet key = {task.id} task={task} onDelete={onDelete} onToggle={onToggle }/>\r\n                ))\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import React from 'react'\r\nimport {useState} from 'react'\r\n\r\nconst AddTask = ({onAdd}) => {\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (!text) {\r\n            alert ('please add task')\r\n            return\r\n        }\r\n        onAdd({text, day, reminder})\r\n\r\n        setText('')\r\n        setReminder(false)\r\n        setDay('')\r\n    }\r\n\r\n\r\n    return (\r\n        <form className='add-form' onSubmit= {onSubmit}>\r\n            <div className='form-control'>\r\n                <label htmlFor=\"\">Task</label>\r\n                <input type=\"text\" placeholder='Add Task' value={text} onChange={\r\n                    (e) => setText(e.target.value)\r\n                }/>\r\n            </div>\r\n            <div className='form-control'>\r\n                <label htmlFor=\"\">Day and Time</label>\r\n                <input type=\"text\" placeholder='Add Day & Time' value={day}  onChange={\r\n                    (e) => setDay(e.target.value)} />\r\n            </div>\r\n            <div className='form-control form-control-check'>\r\n                <label htmlFor=\"\">SetReminder</label>\r\n                <input \r\n                    type=\"checkbox\" \r\n                    checked= {reminder}\r\n                    value= {reminder} \r\n                    onChange={\r\n                    (e) => setReminder(e.currentTarget.checked)}\r\n                    />\r\n            </div>\r\n            \r\n\r\n\r\n            <input type=\"submit\" value='Save Task' className = \"btn btn-block\"/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import Header from './components/header'\nimport Task from './components/Task'\nimport {useState} from 'react'\nimport AddTask from './components/AddTask'\n\n\nfunction App() {\n  const [showAddTask, setshowAddTask] = useState(true)\n  const [tasks, settasks] = useState(\n    [\n    {\n        id: 1,\n        text: 'travelling out tomorrow',\n        day: 'friday march 30',\n        Reminder: true,\n    },\n    {\n        id: 2,\n        text: 'Church program',\n        day: 'thursday march 25',\n        Reminder: true,\n    },\n    {\n        id: 3,\n        text: 'Heaven gates will soon open',\n        day: 'wed march 24',\n        Reminder: false,\n    },\n  ])\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 1000) + 1\n  \n    const newTask = {id, ...task}\n    settasks ([...tasks, newTask])\n  \n  }\n\n\n\n\n  const deleteTask  = (id) => {\n    settasks(tasks.filter((task) => task.id !==id))\n  } \n\n  // toggle reminder\n  const toggleReminder = (id) => {\n    settasks(\n     tasks.map((task) => task.id === id ? {\n       ...task, reminder: !task.reminder\n       } :task\n     )\n    )\n   }\n\n  return (\n    <div className=\"container\">\n      <Header onAdd = {() => setshowAddTask(!showAddTask)} />\n      { showAddTask &&<AddTask onAdd = {addTask}/>}\n      <Task tasks = {tasks} onDelete={deleteTask} onToggle={toggleReminder}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}